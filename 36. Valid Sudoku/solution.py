def is_valid_sudoku(board):
    # rows
    for row in board:
        if not _is_valid_block(row):
            return False
    # columns
    for i in range(9):
        if not _is_valid_block([row[i] for row in board]):
            return False
    # blocks
    for x in range(0, 9, 3):
        for y in range(0, 9, 3):
            block = []
            for i in range(x, x+3):
                for j in range(y, y+3):
                    block.append(board[i][j])
            if not _is_valid_block(block):
                return False
    return True

def _is_valid_block(block):
    # feed this a list of numbers and '.'
    seen = set()
    for n in block:
        if n != '.' and n in seen:
            return False
        seen.add(n)
    return True


if __name__ == '__main__':
    sudoku1 = [
        ['5','3','.','.','7','.','.','.','.'],
        ['6','.','.','1','9','5','.','.','.'],
        ['.','9','8','.','.','.','.','6','.'],
        ['8','.','.','.','6','.','.','.','3'],
        ['4','.','.','8','.','3','.','.','1'],
        ['7','.','.','.','2','.','.','.','6'],
        ['.','6','.','.','.','.','2','8','.'],
        ['.','.','.','4','1','9','.','.','5'],
        ['.','.','.','.','8','.','.','7','9']
    ]
    sudoku2 = [
        ['8','3','.','.','7','.','.','.','.'],
        ['6','.','.','1','9','5','.','.','.'],
        ['.','9','8','.','.','.','.','6','.'],
        ['8','.','.','.','6','.','.','.','3'],
        ['4','.','.','8','.','3','.','.','1'],
        ['7','.','.','.','2','.','.','.','6'],
        ['.','6','.','.','.','.','2','8','.'],
        ['.','.','.','4','1','9','.','.','5'],
        ['.','.','.','.','8','.','.','7','9']
    ]
    sudoku3 = [
        ['5','3','.','.','7','.','.','.','.'],
        ['6','.','.','1','9','5','.','.','.'],
        ['.','9','8','.','.','.','.','6','.'],
        ['8','.','.','.','6','.','.','.','3'],
        ['4','.','.','8','.','3','.','.','1'],
        ['7','.','.','.','2','.','.','.','6'],
        ['.','6','.','.','.','.','2','8','.'],
        ['.','.','.','4','1','9','.','.','8'],
        ['.','.','.','.','8','.','.','7','9']
    ]
    sudoku4 = [
        ['.','.','.','.','5','.','.','1','.'],
        ['.','4','.','3','.','.','.','.','.'],
        ['.','.','.','.','.','3','.','.','1'],
        ['8','.','.','.','.','.','.','2','.'],
        ['.','.','2','.','7','.','.','.','.'],
        ['.','1','5','.','.','.','.','.','.'],
        ['.','.','.','.','.','2','.','.','.'],
        ['.','2','.','9','.','.','.','.','.'],
        ['.','.','4','.','.','.','.','.','.']
    ]
    assert(is_valid_sudoku(sudoku1) is True)
    assert(is_valid_sudoku(sudoku2) is False)
    assert(is_valid_sudoku(sudoku3) is False)
    assert(is_valid_sudoku(sudoku4) is False)